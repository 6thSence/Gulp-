{
  "name": "Gulp-",
  "tagline": "",
  "body": "Little Project Builder on Gulp\r\n\r\n![wow](https://github.com/6thSence/assets-for-any-occasion/raw/master/200 (15).gif)\r\n\r\n## gulpfile.js\r\n\r\n```javascript\r\n var gulp = require('gulp');\r\nvar sass = require('gulp-sass');\r\nvar autoprefixer = require('gulp-autoprefixer');\r\nvar concat = require('gulp-concat');\r\nvar cssnano = require('gulp-cssnano');\r\nvar rename = require('gulp-rename');\r\nvar compass = require('gulp-compass');\r\nvar clean = require('gulp-clean');\r\nvar notify = require('gulp-notify');\r\nvar plumber = require('gulp-plumber');\r\nvar sourcemaps = require('gulp-sourcemaps');\r\nvar uglify = require('gulp-uglify');\r\nvar wiredep = require('gulp-wiredep');\r\nvar useref = require('gulp-useref');\r\nvar browserSync = require('browser-sync').create();\r\n\r\n// Задача с названием 'default' запускается автоматически по команде 'gulp' в консоле.\r\n// Эта конструкция работает синхронно, сначала выполняется задача 'clean' и только после ее завершнения запускается 'dev'.\r\ngulp.task('default', ['clean'], function() {\r\n    gulp.run('dev');\r\n});\r\n// Аналогично с предыдушей задачей.\r\n// Выполняет задача 'clean' и после ее завершения запускается 'build'.\r\ngulp.task('production', ['clean'], function() {\r\n    gulp.run('build');\r\n});\r\n// Задача 'dev' представляется собой сборку в режиме разработки.\r\n// Запускает build - сборку, watcher - слежку за файлами и browser-sync.\r\ngulp.task('dev', ['build', 'watch', 'browser-sync']);\r\n// Задача 'build' представляет собой сборку в режиме продакшен.\r\n// Собирает проект.\r\ngulp.task('build', ['html', 'styles', 'scripts', 'assets']);\r\n// Задача 'watch' следит за всеми нашими файлами в проекте и при изменении тех или иных перезапустает соответсвующую задачу.\r\ngulp.task('watch', function() {\r\n    gulp.watch('src/styles/**/*.scss', ['styles']); //стили\r\n    gulp.watch('src/js/**/*.js', ['scripts']); //скрипты\r\n    gulp.watch(['./bower.json', 'src/index.html'], ['html']); // html\r\n    gulp.watch('./src/assets/**/*.*', ['assets']); //наши локальные файлы(картинки, шрифты)\r\n    gulp.watch('src/**/*.{js,css}').on('change', browserSync.reload); //Перезапуск browserSynс\r\n});\r\n// Задача 'styles' выполняет сборку наших стилей.\\\r\ngulp.task('styles', function() {\r\n    return gulp.src('src/styles/{main,about}.scss')\r\n        .pipe(plumber({ // plumber - плагин для отловли ошибок.\r\n            errorHandler: notify.onError(function(err) { // nofity - представление ошибок в удобном для вас виде.\r\n                return {\r\n                    title: 'Styles',\r\n                    message: err.message\r\n                }\r\n            })\r\n        }))\r\n        .pipe(sourcemaps.init()) //История изменения стилей, которая помогает нам при отладке в devTools.\r\n        .pipe(sass()) //Компиляция sass.\r\n        .pipe(autoprefixer({ //Добавление autoprefixer.\r\n            browsers: ['last 2 versions']\r\n        }))\r\n        .pipe(concat('styles.css')) //Соедение всех файлом стилей в один и задание ему названия 'styles.css'.\r\n        .pipe(cssnano()) //Минификация стилей\r\n        .pipe(sourcemaps.write())\r\n        .pipe(rename('build.css')) //Переименование\r\n        .pipe(gulp.dest('build/styles'));\r\n});\r\n//Задача для удаление папки build.\r\ngulp.task('clean', function() {\r\n    return gulp.src('build/')\r\n        .pipe(clean());\r\n})\r\n\r\ngulp.task('html', function() {\r\n    gulp.src('src/index.html')\r\n        .pipe(wiredep({ //Добавление ссылок на плагины bower.\r\n            directory: 'bower_components/'\r\n        }))\r\n        .pipe(gulp.dest('build/'))\r\n        .on('end', function() { //запуск задачу 'useref' по завершению задачи 'html'.\r\n            gulp.run('useref');\r\n        });\r\n});\r\n\r\ngulp.task('useref', function() {\r\n    gulp.src('build/index.html')\r\n        .pipe(useref()) //Выполняет объединение файлов в один по указанным в разметке html комментариев.\r\n        .pipe(gulp.dest('build/'));\r\n});\r\n\r\ngulp.task('scripts', function() {\r\n    gulp.src('src/js/*.js')\r\n        .pipe(uglify()) //Минификация скриптов.\r\n        .pipe(gulp.dest('build/js'))\r\n        .on('end', function() { //запуск задачу 'useref' по завершению задачи 'html'.\r\n            gulp.run('html');\r\n        });\r\n});\r\n//Задача для запуска сервера.\r\ngulp.task('browser-sync', function() {\r\n    return browserSync.init({\r\n        server: {\r\n            baseDir: './build/'\r\n        }\r\n    });\r\n});\r\n//Перемешение наших локальных файлов в папку build\r\ngulp.task('assets', function() {\r\n    return gulp.src('./src/assets/**/*.*')\r\n        .pipe(gulp.dest('./build/assets'));\r\n});\r\n ```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}